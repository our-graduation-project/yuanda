<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="wang.haogui.yuanda.mapper.UsersMapper">
  <resultMap id="BaseResultMap" type="wang.haogui.yuanda.model.Users">
    <id column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="user_password" jdbcType="VARCHAR" property="userPassword" />
    <result column="user_age" jdbcType="INTEGER" property="userAge" />
    <result column="user_brithday" jdbcType="TIMESTAMP" property="userBrithday" />
    <result column="user_sex" jdbcType="INTEGER" property="userSex" />
    <result column="user_picture" jdbcType="VARCHAR" property="userPicture" />
    <result column="user_background" jdbcType="VARCHAR" property="userBackground" />
    <result column="nick_name" jdbcType="VARCHAR" property="nickName" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="telphone" jdbcType="VARCHAR" property="telphone" />
    <result column="user_integral" jdbcType="INTEGER" property="userIntegral" />
    <result column="last_time" jdbcType="DATE" property="lastTime" />
    <result column="user_descript" jdbcType="VARCHAR" property="userDescript" />
    <result column="article_number" jdbcType="INTEGER" property="articleNumber" />
    <result column="answer_number" jdbcType="INTEGER" property="answerNumber" />
    <result column="question_number" jdbcType="INTEGER" property="questionNumber" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="remark2" jdbcType="VARCHAR" property="remark2" />
    <result column="unread_message_number" jdbcType="INTEGER" property="unreadMessageNumber" />
    <result column="is_deleted" jdbcType="BIT" property="isDeleted" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    user_id, user_name, user_password, user_age, user_brithday, user_sex, user_picture, 
    user_background, nick_name, email, telphone, user_integral, last_time, user_descript, 
    article_number, answer_number, question_number, remark, remark2, unread_message_number, 
    is_deleted
  </sql>
  <select id="selectByExample" parameterType="wang.haogui.yuanda.model.UsersExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from users
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from users
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="wang.haogui.yuanda.model.UsersExample">
    delete from users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="wang.haogui.yuanda.model.Users">
    <selectKey keyProperty="userId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into users (user_name, user_password, user_age, 
      user_brithday, user_sex, user_picture, 
      user_background, nick_name, email, 
      telphone, user_integral, last_time, 
      user_descript, article_number, answer_number, 
      question_number, remark, remark2, 
      unread_message_number, is_deleted)
    values (#{userName,jdbcType=VARCHAR}, #{userPassword,jdbcType=VARCHAR}, #{userAge,jdbcType=INTEGER}, 
      #{userBrithday,jdbcType=TIMESTAMP}, #{userSex,jdbcType=INTEGER}, #{userPicture,jdbcType=VARCHAR}, 
      #{userBackground,jdbcType=VARCHAR}, #{nickName,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{telphone,jdbcType=VARCHAR}, #{userIntegral,jdbcType=INTEGER}, #{lastTime,jdbcType=DATE}, 
      #{userDescript,jdbcType=VARCHAR}, #{articleNumber,jdbcType=INTEGER}, #{answerNumber,jdbcType=INTEGER}, 
      #{questionNumber,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}, #{remark2,jdbcType=VARCHAR}, 
      #{unreadMessageNumber,jdbcType=INTEGER}, #{isDeleted,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="wang.haogui.yuanda.model.Users">
    <selectKey keyProperty="userId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into users
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userName != null">
        user_name,
      </if>
      <if test="userPassword != null">
        user_password,
      </if>
      <if test="userAge != null">
        user_age,
      </if>
      <if test="userBrithday != null">
        user_brithday,
      </if>
      <if test="userSex != null">
        user_sex,
      </if>
      <if test="userPicture != null">
        user_picture,
      </if>
      <if test="userBackground != null">
        user_background,
      </if>
      <if test="nickName != null">
        nick_name,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="telphone != null">
        telphone,
      </if>
      <if test="userIntegral != null">
        user_integral,
      </if>
      <if test="lastTime != null">
        last_time,
      </if>
      <if test="userDescript != null">
        user_descript,
      </if>
      <if test="articleNumber != null">
        article_number,
      </if>
      <if test="answerNumber != null">
        answer_number,
      </if>
      <if test="questionNumber != null">
        question_number,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="remark2 != null">
        remark2,
      </if>
      <if test="unreadMessageNumber != null">
        unread_message_number,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userPassword != null">
        #{userPassword,jdbcType=VARCHAR},
      </if>
      <if test="userAge != null">
        #{userAge,jdbcType=INTEGER},
      </if>
      <if test="userBrithday != null">
        #{userBrithday,jdbcType=TIMESTAMP},
      </if>
      <if test="userSex != null">
        #{userSex,jdbcType=INTEGER},
      </if>
      <if test="userPicture != null">
        #{userPicture,jdbcType=VARCHAR},
      </if>
      <if test="userBackground != null">
        #{userBackground,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null">
        #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="telphone != null">
        #{telphone,jdbcType=VARCHAR},
      </if>
      <if test="userIntegral != null">
        #{userIntegral,jdbcType=INTEGER},
      </if>
      <if test="lastTime != null">
        #{lastTime,jdbcType=DATE},
      </if>
      <if test="userDescript != null">
        #{userDescript,jdbcType=VARCHAR},
      </if>
      <if test="articleNumber != null">
        #{articleNumber,jdbcType=INTEGER},
      </if>
      <if test="answerNumber != null">
        #{answerNumber,jdbcType=INTEGER},
      </if>
      <if test="questionNumber != null">
        #{questionNumber,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="remark2 != null">
        #{remark2,jdbcType=VARCHAR},
      </if>
      <if test="unreadMessageNumber != null">
        #{unreadMessageNumber,jdbcType=INTEGER},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="wang.haogui.yuanda.model.UsersExample" resultType="java.lang.Long">
    select count(*) from users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update users
    <set>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.userName != null">
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.userPassword != null">
        user_password = #{record.userPassword,jdbcType=VARCHAR},
      </if>
      <if test="record.userAge != null">
        user_age = #{record.userAge,jdbcType=INTEGER},
      </if>
      <if test="record.userBrithday != null">
        user_brithday = #{record.userBrithday,jdbcType=TIMESTAMP},
      </if>
      <if test="record.userSex != null">
        user_sex = #{record.userSex,jdbcType=INTEGER},
      </if>
      <if test="record.userPicture != null">
        user_picture = #{record.userPicture,jdbcType=VARCHAR},
      </if>
      <if test="record.userBackground != null">
        user_background = #{record.userBackground,jdbcType=VARCHAR},
      </if>
      <if test="record.nickName != null">
        nick_name = #{record.nickName,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.telphone != null">
        telphone = #{record.telphone,jdbcType=VARCHAR},
      </if>
      <if test="record.userIntegral != null">
        user_integral = #{record.userIntegral,jdbcType=INTEGER},
      </if>
      <if test="record.lastTime != null">
        last_time = #{record.lastTime,jdbcType=DATE},
      </if>
      <if test="record.userDescript != null">
        user_descript = #{record.userDescript,jdbcType=VARCHAR},
      </if>
      <if test="record.articleNumber != null">
        article_number = #{record.articleNumber,jdbcType=INTEGER},
      </if>
      <if test="record.answerNumber != null">
        answer_number = #{record.answerNumber,jdbcType=INTEGER},
      </if>
      <if test="record.questionNumber != null">
        question_number = #{record.questionNumber,jdbcType=INTEGER},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.remark2 != null">
        remark2 = #{record.remark2,jdbcType=VARCHAR},
      </if>
      <if test="record.unreadMessageNumber != null">
        unread_message_number = #{record.unreadMessageNumber,jdbcType=INTEGER},
      </if>
      <if test="record.isDeleted != null">
        is_deleted = #{record.isDeleted,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update users
    set user_id = #{record.userId,jdbcType=INTEGER},
      user_name = #{record.userName,jdbcType=VARCHAR},
      user_password = #{record.userPassword,jdbcType=VARCHAR},
      user_age = #{record.userAge,jdbcType=INTEGER},
      user_brithday = #{record.userBrithday,jdbcType=TIMESTAMP},
      user_sex = #{record.userSex,jdbcType=INTEGER},
      user_picture = #{record.userPicture,jdbcType=VARCHAR},
      user_background = #{record.userBackground,jdbcType=VARCHAR},
      nick_name = #{record.nickName,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      telphone = #{record.telphone,jdbcType=VARCHAR},
      user_integral = #{record.userIntegral,jdbcType=INTEGER},
      last_time = #{record.lastTime,jdbcType=DATE},
      user_descript = #{record.userDescript,jdbcType=VARCHAR},
      article_number = #{record.articleNumber,jdbcType=INTEGER},
      answer_number = #{record.answerNumber,jdbcType=INTEGER},
      question_number = #{record.questionNumber,jdbcType=INTEGER},
      remark = #{record.remark,jdbcType=VARCHAR},
      remark2 = #{record.remark2,jdbcType=VARCHAR},
      unread_message_number = #{record.unreadMessageNumber,jdbcType=INTEGER},
      is_deleted = #{record.isDeleted,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="wang.haogui.yuanda.model.Users">
    update users
    <set>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userPassword != null">
        user_password = #{userPassword,jdbcType=VARCHAR},
      </if>
      <if test="userAge != null">
        user_age = #{userAge,jdbcType=INTEGER},
      </if>
      <if test="userBrithday != null">
        user_brithday = #{userBrithday,jdbcType=TIMESTAMP},
      </if>
      <if test="userSex != null">
        user_sex = #{userSex,jdbcType=INTEGER},
      </if>
      <if test="userPicture != null">
        user_picture = #{userPicture,jdbcType=VARCHAR},
      </if>
      <if test="userBackground != null">
        user_background = #{userBackground,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null">
        nick_name = #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="telphone != null">
        telphone = #{telphone,jdbcType=VARCHAR},
      </if>
      <if test="userIntegral != null">
        user_integral = #{userIntegral,jdbcType=INTEGER},
      </if>
      <if test="lastTime != null">
        last_time = #{lastTime,jdbcType=DATE},
      </if>
      <if test="userDescript != null">
        user_descript = #{userDescript,jdbcType=VARCHAR},
      </if>
      <if test="articleNumber != null">
        article_number = #{articleNumber,jdbcType=INTEGER},
      </if>
      <if test="answerNumber != null">
        answer_number = #{answerNumber,jdbcType=INTEGER},
      </if>
      <if test="questionNumber != null">
        question_number = #{questionNumber,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="remark2 != null">
        remark2 = #{remark2,jdbcType=VARCHAR},
      </if>
      <if test="unreadMessageNumber != null">
        unread_message_number = #{unreadMessageNumber,jdbcType=INTEGER},
      </if>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted},
      </if>
    </set>
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="wang.haogui.yuanda.model.Users">
    update users
    set user_name = #{userName,jdbcType=VARCHAR},
      user_password = #{userPassword,jdbcType=VARCHAR},
      user_age = #{userAge,jdbcType=INTEGER},
      user_brithday = #{userBrithday,jdbcType=TIMESTAMP},
      user_sex = #{userSex,jdbcType=INTEGER},
      user_picture = #{userPicture,jdbcType=VARCHAR},
      user_background = #{userBackground,jdbcType=VARCHAR},
      nick_name = #{nickName,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      telphone = #{telphone,jdbcType=VARCHAR},
      user_integral = #{userIntegral,jdbcType=INTEGER},
      last_time = #{lastTime,jdbcType=DATE},
      user_descript = #{userDescript,jdbcType=VARCHAR},
      article_number = #{articleNumber,jdbcType=INTEGER},
      answer_number = #{answerNumber,jdbcType=INTEGER},
      question_number = #{questionNumber,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      remark2 = #{remark2,jdbcType=VARCHAR},
      unread_message_number = #{unreadMessageNumber,jdbcType=INTEGER},
      is_deleted = #{isDeleted,jdbcType=BIT}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>

  <!--批量删除用户-->

  <update id="updateBatchIsDeleted" parameterType="java.util.List">
    UPDATE users SET is_deleted =
    #{item.isDeleted}
    WHERE user_id IN
    <foreach collection="list" index="index" item="item" open="(" separator="," close=")">#{item.userId}
    </foreach>
  </update>

  <!--  自己写的批量增加-->

  <insert id="addBatchUsers" parameterType="java.util.List">
    insert into `users` (user_name, user_password, user_age,user_brithday, user_sex, user_picture,
    user_background, nick_name, email,telphone, user_integral, last_time,user_descript, article_number, answer_number,
    question_number,unread_message_number, is_deleted) values
    <foreach collection="list" separator="," item="users">
      (#{users.userName,jdbcType=VARCHAR},
      #{users.userPassword,jdbcType=VARCHAR},
      #{users.userAge,jdbcType=INTEGER},
      #{users.userBrithday,jdbcType=TIMESTAMP},
      #{users.userSex,jdbcType=INTEGER},
      #{users.userPicture,jdbcType=VARCHAR},
      #{users.userBackground,jdbcType=VARCHAR},
      #{users.nickName,jdbcType=VARCHAR},
      #{users.email,jdbcType=VARCHAR},
      #{users.telphone,jdbcType=VARCHAR},
      #{users.userIntegral,jdbcType=INTEGER},
      #{users.lastTime,jdbcType=DATE},
      #{users.userDescript,jdbcType=VARCHAR},
      #{users.articleNumber,jdbcType=INTEGER},
      #{users.answerNumber,jdbcType=INTEGER},
      #{users.questionNumber,jdbcType=INTEGER},
      #{users.unreadMessageNumber,jdbcType=INTEGER},
      #{users.isDeleted,jdbcType=BIT})
    </foreach>
  </insert>

  <update id="updateIsDeletedByList" >
    update users
    set is_deleted = #{status}
    where user_id in
    (
    <foreach collection="list"  item="id" separator="," >
      #{id}
    </foreach>
    )
  </update>
</mapper>
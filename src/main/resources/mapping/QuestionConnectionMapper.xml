<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="wang.haogui.yuanda.mapper.QuestionConnectionMapper">
  <resultMap id="BaseResultMap" type="wang.haogui.yuanda.model.QuestionConnection">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="quesion_id" jdbcType="INTEGER" property="quesionId" />
    <result column="answer_id" jdbcType="INTEGER" property="answerId" />
    <result column="comment_number" jdbcType="INTEGER" property="commentNumber" />
    <result column="agreement_number" jdbcType="INTEGER" property="agreementNumber" />
    <result column="disagreement_number" jdbcType="INTEGER" property="disagreementNumber" />
    <result column="click_number" jdbcType="INTEGER" property="clickNumber" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="remark2" jdbcType="VARCHAR" property="remark2" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, quesion_id, answer_id, comment_number, agreement_number, disagreement_number, 
    click_number, remark, remark2
  </sql>
  <select id="selectByExample" parameterType="wang.haogui.yuanda.model.QuestionConnectionExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from question_connection
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from question_connection
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from question_connection
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="wang.haogui.yuanda.model.QuestionConnectionExample">
    delete from question_connection
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="wang.haogui.yuanda.model.QuestionConnection">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into question_connection (quesion_id, answer_id, comment_number, 
      agreement_number, disagreement_number, click_number, 
      remark, remark2)
    values (#{quesionId,jdbcType=INTEGER}, #{answerId,jdbcType=INTEGER}, #{commentNumber,jdbcType=INTEGER}, 
      #{agreementNumber,jdbcType=INTEGER}, #{disagreementNumber,jdbcType=INTEGER}, #{clickNumber,jdbcType=INTEGER}, 
      #{remark,jdbcType=VARCHAR}, #{remark2,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="wang.haogui.yuanda.model.QuestionConnection">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into question_connection
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="quesionId != null">
        quesion_id,
      </if>
      <if test="answerId != null">
        answer_id,
      </if>
      <if test="commentNumber != null">
        comment_number,
      </if>
      <if test="agreementNumber != null">
        agreement_number,
      </if>
      <if test="disagreementNumber != null">
        disagreement_number,
      </if>
      <if test="clickNumber != null">
        click_number,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="remark2 != null">
        remark2,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="quesionId != null">
        #{quesionId,jdbcType=INTEGER},
      </if>
      <if test="answerId != null">
        #{answerId,jdbcType=INTEGER},
      </if>
      <if test="commentNumber != null">
        #{commentNumber,jdbcType=INTEGER},
      </if>
      <if test="agreementNumber != null">
        #{agreementNumber,jdbcType=INTEGER},
      </if>
      <if test="disagreementNumber != null">
        #{disagreementNumber,jdbcType=INTEGER},
      </if>
      <if test="clickNumber != null">
        #{clickNumber,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="remark2 != null">
        #{remark2,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="wang.haogui.yuanda.model.QuestionConnectionExample" resultType="java.lang.Long">
    select count(*) from question_connection
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update question_connection
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.quesionId != null">
        quesion_id = #{record.quesionId,jdbcType=INTEGER},
      </if>
      <if test="record.answerId != null">
        answer_id = #{record.answerId,jdbcType=INTEGER},
      </if>
      <if test="record.commentNumber != null">
        comment_number = #{record.commentNumber,jdbcType=INTEGER},
      </if>
      <if test="record.agreementNumber != null">
        agreement_number = #{record.agreementNumber,jdbcType=INTEGER},
      </if>
      <if test="record.disagreementNumber != null">
        disagreement_number = #{record.disagreementNumber,jdbcType=INTEGER},
      </if>
      <if test="record.clickNumber != null">
        click_number = #{record.clickNumber,jdbcType=INTEGER},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.remark2 != null">
        remark2 = #{record.remark2,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update question_connection
    set id = #{record.id,jdbcType=INTEGER},
      quesion_id = #{record.quesionId,jdbcType=INTEGER},
      answer_id = #{record.answerId,jdbcType=INTEGER},
      comment_number = #{record.commentNumber,jdbcType=INTEGER},
      agreement_number = #{record.agreementNumber,jdbcType=INTEGER},
      disagreement_number = #{record.disagreementNumber,jdbcType=INTEGER},
      click_number = #{record.clickNumber,jdbcType=INTEGER},
      remark = #{record.remark,jdbcType=VARCHAR},
      remark2 = #{record.remark2,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="wang.haogui.yuanda.model.QuestionConnection">
    update question_connection
    <set>
      <if test="quesionId != null">
        quesion_id = #{quesionId,jdbcType=INTEGER},
      </if>
      <if test="answerId != null">
        answer_id = #{answerId,jdbcType=INTEGER},
      </if>
      <if test="commentNumber != null">
        comment_number = #{commentNumber,jdbcType=INTEGER},
      </if>
      <if test="agreementNumber != null">
        agreement_number = #{agreementNumber,jdbcType=INTEGER},
      </if>
      <if test="disagreementNumber != null">
        disagreement_number = #{disagreementNumber,jdbcType=INTEGER},
      </if>
      <if test="clickNumber != null">
        click_number = #{clickNumber,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="remark2 != null">
        remark2 = #{remark2,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="wang.haogui.yuanda.model.QuestionConnection">
    update question_connection
    set quesion_id = #{quesionId,jdbcType=INTEGER},
      answer_id = #{answerId,jdbcType=INTEGER},
      comment_number = #{commentNumber,jdbcType=INTEGER},
      agreement_number = #{agreementNumber,jdbcType=INTEGER},
      disagreement_number = #{disagreementNumber,jdbcType=INTEGER},
      click_number = #{clickNumber,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      remark2 = #{remark2,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>
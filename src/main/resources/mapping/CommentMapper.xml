<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="wang.haogui.yuanda.mapper.CommentMapper">
    <resultMap id="BaseResultMap" type="wang.haogui.yuanda.model.Comment">
        <id column="comment_id" jdbcType="INTEGER" property="commentId"/>
        <result column="comment_content" jdbcType="VARCHAR" property="commentContent"/>
        <result column="comment_number" jdbcType="INTEGER" property="commentNumber"/>
        <result column="comment_target_id" jdbcType="INTEGER" property="commentTargetId"/>
        <result column="comment_resource_id" jdbcType="INTEGER" property="commentResourceId"/>
        <result column="comment_resource_name" jdbcType="VARCHAR" property="commentResourceName"/>
        <result column="comment_resource_picture" jdbcType="VARCHAR" property="commentResourcePicture"/>
        <result column="remark" jdbcType="VARCHAR" property="remark"/>
        <result column="remark2" jdbcType="VARCHAR" property="remark2"/>
        <result column="comment_type" jdbcType="TINYINT" property="commentType"/>
        <result column="is_deleted" jdbcType="BIT" property="isDeleted"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    comment_id, comment_content, comment_number, comment_target_id, comment_resource_id, 
    comment_resource_name, comment_resource_picture, remark, remark2, comment_type, is_deleted
  </sql>
    <select id="selectByExample" parameterType="wang.haogui.yuanda.model.CommentExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from comment
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from comment
        where comment_id = #{commentId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from comment
    where comment_id = #{commentId,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="wang.haogui.yuanda.model.CommentExample">
        delete from comment
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="wang.haogui.yuanda.model.Comment">
        <selectKey keyProperty="commentId" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into comment (comment_content, comment_number, comment_target_id,
        comment_resource_id, comment_resource_name,
        comment_resource_picture, remark, remark2,
        comment_type, is_deleted)
        values (#{commentContent,jdbcType=VARCHAR}, #{commentNumber,jdbcType=INTEGER},
        #{commentTargetId,jdbcType=INTEGER},
        #{commentResourceId,jdbcType=INTEGER}, #{commentResourceName,jdbcType=VARCHAR},
        #{commentResourcePicture,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, #{remark2,jdbcType=VARCHAR},
        #{commentType,jdbcType=TINYINT}, #{isDeleted,jdbcType=BIT})
    </insert>
    <insert id="insertSelective" parameterType="wang.haogui.yuanda.model.Comment">
        <selectKey keyProperty="commentId" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into comment
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="commentContent != null">
                comment_content,
            </if>
            <if test="commentNumber != null">
                comment_number,
            </if>
            <if test="commentTargetId != null">
                comment_target_id,
            </if>
            <if test="commentResourceId != null">
                comment_resource_id,
            </if>
            <if test="commentResourceName != null">
                comment_resource_name,
            </if>
            <if test="commentResourcePicture != null">
                comment_resource_picture,
            </if>
            <if test="remark != null">
                remark,
            </if>
            <if test="remark2 != null">
                remark2,
            </if>
            <if test="commentType != null">
                comment_type,
            </if>
            <if test="isDeleted != null">
                is_deleted,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="commentContent != null">
                #{commentContent,jdbcType=VARCHAR},
            </if>
            <if test="commentNumber != null">
                #{commentNumber,jdbcType=INTEGER},
            </if>
            <if test="commentTargetId != null">
                #{commentTargetId,jdbcType=INTEGER},
            </if>
            <if test="commentResourceId != null">
                #{commentResourceId,jdbcType=INTEGER},
            </if>
            <if test="commentResourceName != null">
                #{commentResourceName,jdbcType=VARCHAR},
            </if>
            <if test="commentResourcePicture != null">
                #{commentResourcePicture,jdbcType=VARCHAR},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=VARCHAR},
            </if>
            <if test="remark2 != null">
                #{remark2,jdbcType=VARCHAR},
            </if>
            <if test="commentType != null">
                #{commentType,jdbcType=TINYINT},
            </if>
            <if test="isDeleted != null">
                #{isDeleted,jdbcType=BIT},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="wang.haogui.yuanda.model.CommentExample" resultType="java.lang.Long">
        select count(*) from comment
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update comment
        <set>
            <if test="record.commentId != null">
                comment_id = #{record.commentId,jdbcType=INTEGER},
            </if>
            <if test="record.commentContent != null">
                comment_content = #{record.commentContent,jdbcType=VARCHAR},
            </if>
            <if test="record.commentNumber != null">
                comment_number = #{record.commentNumber,jdbcType=INTEGER},
            </if>
            <if test="record.commentTargetId != null">
                comment_target_id = #{record.commentTargetId,jdbcType=INTEGER},
            </if>
            <if test="record.commentResourceId != null">
                comment_resource_id = #{record.commentResourceId,jdbcType=INTEGER},
            </if>
            <if test="record.commentResourceName != null">
                comment_resource_name = #{record.commentResourceName,jdbcType=VARCHAR},
            </if>
            <if test="record.commentResourcePicture != null">
                comment_resource_picture = #{record.commentResourcePicture,jdbcType=VARCHAR},
            </if>
            <if test="record.remark != null">
                remark = #{record.remark,jdbcType=VARCHAR},
            </if>
            <if test="record.remark2 != null">
                remark2 = #{record.remark2,jdbcType=VARCHAR},
            </if>
            <if test="record.commentType != null">
                comment_type = #{record.commentType,jdbcType=TINYINT},
            </if>
            <if test="record.isDeleted != null">
                is_deleted = #{record.isDeleted,jdbcType=BIT},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update comment
        set comment_id = #{record.commentId,jdbcType=INTEGER},
        comment_content = #{record.commentContent,jdbcType=VARCHAR},
        comment_number = #{record.commentNumber,jdbcType=INTEGER},
        comment_target_id = #{record.commentTargetId,jdbcType=INTEGER},
        comment_resource_id = #{record.commentResourceId,jdbcType=INTEGER},
        comment_resource_name = #{record.commentResourceName,jdbcType=VARCHAR},
        comment_resource_picture = #{record.commentResourcePicture,jdbcType=VARCHAR},
        remark = #{record.remark,jdbcType=VARCHAR},
        remark2 = #{record.remark2,jdbcType=VARCHAR},
        comment_type = #{record.commentType,jdbcType=TINYINT},
        is_deleted = #{record.isDeleted,jdbcType=BIT}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="wang.haogui.yuanda.model.Comment">
        update comment
        <set>
            <if test="commentContent != null">
                comment_content = #{commentContent,jdbcType=VARCHAR},
            </if>
            <if test="commentNumber != null">
                comment_number = #{commentNumber,jdbcType=INTEGER},
            </if>
            <if test="commentTargetId != null">
                comment_target_id = #{commentTargetId,jdbcType=INTEGER},
            </if>
            <if test="commentResourceId != null">
                comment_resource_id = #{commentResourceId,jdbcType=INTEGER},
            </if>
            <if test="commentResourceName != null">
                comment_resource_name = #{commentResourceName,jdbcType=VARCHAR},
            </if>
            <if test="commentResourcePicture != null">
                comment_resource_picture = #{commentResourcePicture,jdbcType=VARCHAR},
            </if>
            <if test="remark != null">
                remark = #{remark,jdbcType=VARCHAR},
            </if>
            <if test="remark2 != null">
                remark2 = #{remark2,jdbcType=VARCHAR},
            </if>
            <if test="commentType != null">
                comment_type = #{commentType,jdbcType=TINYINT},
            </if>
            <if test="isDeleted != null">
                is_deleted = #{isDeleted,jdbcType=BIT},
            </if>
        </set>
        where comment_id = #{commentId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="wang.haogui.yuanda.model.Comment">
    update comment
    set comment_content = #{commentContent,jdbcType=VARCHAR},
      comment_number = #{commentNumber,jdbcType=INTEGER},
      comment_target_id = #{commentTargetId,jdbcType=INTEGER},
      comment_resource_id = #{commentResourceId,jdbcType=INTEGER},
      comment_resource_name = #{commentResourceName,jdbcType=VARCHAR},
      comment_resource_picture = #{commentResourcePicture,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      remark2 = #{remark2,jdbcType=VARCHAR},
      comment_type = #{commentType,jdbcType=TINYINT},
      is_deleted = #{isDeleted,jdbcType=BIT}
    where comment_id = #{commentId,jdbcType=INTEGER}
  </update>
   <update id="updateBatchForComment" parameterType="java.util.List">
        UPDATE comment SET is_deleted =
        #{item.isDeleted}
        WHERE comment_id IN
        <foreach collection="list" index="index" item="item" open="(" separator="," close=")">#{item.commentId}
        </foreach>
   </update>
   <update id="updateForCommentNumber" parameterType="wang.haogui.yuanda.model.Comment">
    update comment
    <set>
        <if test="commentNumber == 1">
            comment_number = comment_number + 1
        </if>
        <if test="commentNumber == -1">
            comment_number = comment_number - 1
        </if>
    </set>
    where comment_id = #{commentId,jdbcType=INTEGER}
  </update>
</mapper>